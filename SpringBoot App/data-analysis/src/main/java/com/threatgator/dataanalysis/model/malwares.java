package com.threatgator.dataanalysis.model;

import org.springframework.boot.configurationprocessor.json.JSONException;
import org.springframework.boot.configurationprocessor.json.JSONObject;

import java.util.*;

public class malwares {
    static Map malwareMap = new HashMap<String, Integer>();

    void addMalware(String name){
        if(malwareMap.get(name) == null){
            malwareMap.put(name, 1);
        }
        else{
            Integer val = (Integer) malwareMap.get(name);
            malwareMap.put(name,val+1);
        }
    }
    public Map getMalwaresMap(){
        return malwareMap;
    }
    private static HashMap<String,Integer> sortByValue(){
        List<Map.Entry<String, Integer> > list =
                new LinkedList<Map.Entry<String, Integer> >(malwareMap.entrySet());
        Collections.sort(list, new Comparator<Map.Entry<String, Integer> >() {
            public int compare(Map.Entry<String, Integer> o1,
                               Map.Entry<String, Integer> o2)
            {
                return (o2.getValue()).compareTo(o1.getValue());
            }
        });

        // put data from sorted list to hashmap
        HashMap<String, Integer> temp = new LinkedHashMap<String, Integer>();
        for (Map.Entry<String, Integer> aa : list) {
            temp.put(aa.getKey(), aa.getValue());
        }
        return temp;
    }

    // get top k malwares
    public JSONObject getTopMalwares(int value) throws JSONException {
        Map<String, Integer> sortedMap = sortByValue();
        Iterator hmIterator = sortedMap.entrySet().iterator();
        int start = 0;
        JSONObject j = new JSONObject();
        while(hmIterator.hasNext() && start <= value){
            start += 1;
            Map.Entry mapElement = (Map.Entry)hmIterator.next();
            j.put(mapElement.getKey().toString(),(int)mapElement.getValue());
        }
        return j;
    }

}
